{
  "swagger": "2.0",
  "info": {
    "description": "this is the user service api for bitok and other scientific associations.",
    "version": "1.0.0",
    "title": "User Service",
    "contact": {
      "email": "ali.hamrani80@gmail.com"
    }
  },
  "host": "api.bitok.com",
  "basePath": "/user/v1",
  "schemes": [
    "http",
    "https"
  ],
  "tags": [
    {
      "name": "users",
      "description": "user service api"
    },
    {
      "name": "profile",
      "description": "users profile api"
    },
    {
      "name": "codes",
      "description": "api for managing verification codes"
    },
    {
      "name": "levels",
      "description": "api for managing level and user levels"
    },
    {
      "name": "roles",
      "description": "api for managing roles"
    },
    {
      "name": "permissions",
      "description": "api for managing permissions"
    }
  ],
  "paths": {
    "/users/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "create new user",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User object that needs to be sent to the user service",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "401": {
            "description": "unauthorized - only user with 'add:users' permission",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "get users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "path",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "path",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {
                  "usersCount": 1000,
                  "users": {}
                }
              }
            }
          },
          "401": {
            "description": "unauthorized - only user with 'findAll:users' permission",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      }
    },
    "/users/{id}/": {
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "delete user by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          },
          "400": {
            "description": "invalid ID",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "401": {
            "description": "unauthorized - only user with 'delete:users' permission",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "update user by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "User object that needs to be sent to the user service",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          },
          "401": {
            "description": "unauthorized - only user with 'update:users' permission or owner of account",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "get user by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          },
          "404": {
            "description": "user not found",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      }
    },
    "/users/register/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "register new user",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User object that needs to be sent to the user service",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "bad request - example of occur is when user didn't verified his phone",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "401": {
            "description": "unauthorized - only user with 'add:users' permission",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {
                  "token": "string"
                }
              }
            }
          }
        }
      }
    },
    "/users/login/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "user login endpoint",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "body",
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {
                  "token": "string"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      }
    },
    "/users/byToken/{token}/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "get user by token",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "type": "string",
            "format": "int64",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          },
          "404": {
            "description": "user not found",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      }
    },
    "/users/byUsername/{username}/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "get user by username",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          },
          "404": {
            "description": "user not found",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      }
    },
    "/codes/send/": {
      "post": {
        "tags": [
          "codes"
        ],
        "summary": "send verification code to user",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "enum": [
              "REGISTER",
              "FORGET_PASSWORD",
              "OTHER"
            ],
            "in": "body",
            "type": "string"
          },
          {
            "name": "phone",
            "in": "body",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          }
        }
      }
    },
    "/codes/verify/": {
      "post": {
        "tags": [
          "codes"
        ],
        "summary": "verify phone by verification code",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "enum": [
              "REGISTER",
              "FORGET_PASSWORD",
              "OTHER"
            ],
            "in": "body",
            "type": "string"
          },
          {
            "name": "phone",
            "in": "body",
            "type": "string"
          },
          {
            "name": "code",
            "in": "body",
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "404": {
            "description": "code not found",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          }
        }
      }
    },
    "/users/resetPassword/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "reset password",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "type": "string"
          },
          {
            "name": "newPassword",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          }
        }
      }
    },
    "/users/tickRequest/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "request for authentication in order to obtain colored tick"
      }
    },
    "/profile/{username}/": {
      "put": {
        "tags": [
          "profile"
        ],
        "summary": "create or update user profile"
      },
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "find user profile by username"
      }
    },
    "/levels/": {
      "post": {
        "tags": [
          "levels"
        ],
        "summary": "create new level",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User object that needs to be sent to the user service",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Level"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "unauthorized - only user with 'add:levels' permission",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "levels"
        ],
        "summary": "get levels",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "path",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "path",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {
                  "levelCount": 1000,
                  "levels": {}
                }
              }
            }
          },
          "401": {
            "description": "unauthorized - only user with 'findAll:levels' permission",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      }
    },
    "/levels/{id}/": {
      "delete": {
        "tags": [
          "levels"
        ],
        "summary": "delete level by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          },
          "400": {
            "description": "invalid ID",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "401": {
            "description": "unauthorized - only user with 'delete:levels' permission",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      },
      "put": {
        "tags": [
          "levels"
        ],
        "summary": "update level by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Level object that needs to be sent to the user service",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Level"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          },
          "401": {
            "description": "unauthorized - only user with 'update:levels' permission",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      },
      "get": {
        "tags": [
          "levels"
        ],
        "summary": "find level",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          },
          "404": {
            "description": "level not found",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      }
    },
    "/roles/": {
      "post": {
        "tags": [
          "roles"
        ],
        "summary": "create new role",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User object that needs to be sent to the user service",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "401": {
            "description": "unauthorized - only user with 'add:roles' permission",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "get roles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "path",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "path",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {
                  "roleCount": 1000,
                  "roles": {}
                }
              }
            }
          },
          "401": {
            "description": "unauthorized - only user with 'findAll:roles' permission",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      }
    },
    "/roles/{id}/": {
      "delete": {
        "tags": [
          "roles"
        ],
        "summary": "delete role by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          },
          "400": {
            "description": "invalid ID",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "401": {
            "description": "unauthorized - only user with 'delete:roles' permission",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      },
      "put": {
        "tags": [
          "roles"
        ],
        "summary": "update role by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Level object that needs to be sent to the user service",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          },
          "401": {
            "description": "unauthorized - only user with 'update:roles' permission",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      },
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "find role",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          },
          "404": {
            "description": "role not found",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      }
    },
    "/permissions/": {
      "post": {
        "tags": [
          "permissions"
        ],
        "summary": "create new permission",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User object that needs to be sent to the user service",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Permission"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "401": {
            "description": "unauthorized - only user with 'add:permissions' permission",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "permissions"
        ],
        "summary": "get permissions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "path",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "path",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {
                  "permissionCount": 1000,
                  "permissions": {}
                }
              }
            }
          },
          "401": {
            "description": "unauthorized - only user with 'findAll:permissions' permission",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      }
    },
    "/permissions/{id}/": {
      "delete": {
        "tags": [
          "permissions"
        ],
        "summary": "delete permission by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          },
          "400": {
            "description": "invalid ID",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "401": {
            "description": "unauthorized - only user with 'delete:permissions' permission",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      },
      "put": {
        "tags": [
          "permissions"
        ],
        "summary": "update permission by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Level object that needs to be sent to the user service",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Permission"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          },
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          },
          "401": {
            "description": "unauthorized - only user with 'update:permissions' permission",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      },
      "get": {
        "tags": [
          "permissions"
        ],
        "summary": "find permission",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "example": {
                "message": "string",
                "error": false,
                "status": 200,
                "data": {}
              }
            }
          },
          "404": {
            "description": "permission not found",
            "schema": {
              "$ref": "#/definitions/RestResp"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "token": {
      "type": "apiKey",
      "name": "token",
      "in": "header"
    }
  },
  "definitions": {
    "RestResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "description": "http status code"
        },
        "error": {
          "type": "boolean",
          "description": "check that operation state is success or not "
        },
        "data": {
          "type": "object",
          "description": "when error is true, data object is empty object "
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "phone",
        "email",
        "username",
        "firstName",
        "lastName",
        "personnelNum",
        "password"
      ],
      "properties": {
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "personnelNum": {
          "type": "integer",
          "format": "int64"
        },
        "password": {
          "type": "string"
        },
        "levelID": {
          "type": "integer",
          "format": "int64"
        },
        "blocked": {
          "type": "boolean",
          "default": false
        },
        "roles" : {
          "type": "array",
          "description": "array of roles id",
          "default": []
        }
      }
    },
    "Role": {
      "type": "object",
      "required": [
        "title"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "permissions" : {
          "type": "array",
          "description": "array of permissions id",
          "default": []
        }
      }
    },
    "Permission": {
      "type": "object",
      "required": [
        "title",
        "symbol"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        }
      }
    },
    "Level": {
      "type": "object",
      "required": [
        "title",
        "color"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "color": {
          "type": "string"
        }
      }
    }
  }
}